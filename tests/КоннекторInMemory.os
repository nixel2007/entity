// BSLLS:MagicNumber-off
// BSLLS:LatinAndCyrillicSymbolInWord-off
// BSLLS:DuplicateStringLiteral-off
// BSLLS:LineLength-off

#Использовать fs
#Использовать ".."
#Использовать "utils"

Перем Коннектор;
Перем СтрокаСоединения;

Процедура ПередЗапускомТеста() Экспорт
	ХранилищеВПамяти.Очистить();
	ПодключитьСценарий(ОбъединитьПути(ТекущийКаталог(), "tests", "fixtures", "СущностьСоВсемиТипамиКолонок.os"), "СущностьСоВсемиТипамиКолонок");
	ПодключитьСценарий(ОбъединитьПути(ТекущийКаталог(), "tests", "fixtures", "АвтоинкрементныйКлючБезКолонок.os"), "АвтоинкрементныйКлючБезКолонок");
	ПодключитьСценарий(ОбъединитьПути(ТекущийКаталог(), "tests", "fixtures", "СущностьСИменованнымПолем.os"), "СущностьСИменованнымПолем");
	
	Коннектор = Новый КоннекторInMemory();
	Коннектор.Открыть(СтрокаСоединения, Новый Массив);
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	Коннектор.Закрыть();
КонецПроцедуры

&Тест
Процедура КоннекторInMemoryРеализуетИнтерфейсКоннектора() Экспорт
	ИнтерфейсОбъекта = Новый ИнтерфейсОбъекта();
	ИнтерфейсОбъекта.ИзОбъекта(Тип("АбстрактныйКоннектор"));
	
	РефлекторОбъекта = Новый РефлекторОбъекта(Тип("КоннекторInMemory"));
	РефлекторОбъекта.РеализуетИнтерфейс(ИнтерфейсОбъекта, Истина);
КонецПроцедуры

&Тест
Процедура НайтиСтрокиВТаблице() Экспорт
	МодельДанных = Новый МодельДанных();
	ОбъектМодели = МодельДанных.СоздатьОбъектМодели(Тип("СущностьСоВсемиТипамиКолонок"));
	Коннектор.ИнициализироватьТаблицу(ОбъектМодели);
	
	ЗависимаяСущность = Новый СущностьСоВсемиТипамиКолонок;
	ЗависимаяСущность.Целое = 2;
	
	Сущность = Новый СущностьСоВсемиТипамиКолонок;
	Сущность.Целое = 1;
	Сущность.Дробное = 1.2;
	Сущность.БулевоИстина = Истина;
	Сущность.БулевоЛожь = Ложь;
	Сущность.Строка = "Строка";
	Сущность.Дата = Дата(2018, 1, 1);
	Сущность.Время = Дата(1, 1, 1, 10, 53, 20);
	Сущность.ДатаВремя = Дата(2018, 1, 1, 10, 53, 20);
	Сущность.Ссылка = ЗависимаяСущность;
	Сущность.ДвоичныеДанные = ПолучитьДвоичныеДанныеИзСтроки("ДвоичныеДанные");
	
	Коннектор.Сохранить(ОбъектМодели, ЗависимаяСущность);
	Коннектор.Сохранить(ОбъектМодели, Сущность);
	
	ОпцииПоиска = Новый ОпцииПоиска;
	ОпцииПоиска.Отбор("Целое", ВидСравнения.Равно, Сущность.Целое);

	НайденныеСтроки = Коннектор.НайтиСтрокиВТаблице(ОбъектМодели, ОпцииПоиска);
	Ожидаем.Что(НайденныеСтроки, "Сущность сохранилась").ИмеетДлину(1);

	ЗначенияКолонок = НайденныеСтроки[0];

	Ожидаем.Что(ЗначенияКолонок.Получить("Целое"), "ЗначенияКолонок.Целое получено корректно").Равно(Сущность.Целое);
	Ожидаем.Что(ЗначенияКолонок.Получить("Дробное"), "ЗначенияКолонок.Дробное получено корректно").Равно(Сущность.Дробное);
	Ожидаем.Что(ЗначенияКолонок.Получить("БулевоИстина"), "ЗначенияКолонок.БулевоИстина получено корректно").Равно(Сущность.БулевоИстина);
	Ожидаем.Что(ЗначенияКолонок.Получить("БулевоЛожь"), "ЗначенияКолонок.БулевоЛожь получено корректно").Равно(Сущность.БулевоЛожь);
	Ожидаем.Что(ЗначенияКолонок.Получить("Строка"), "ЗначенияКолонок.Строка получено корректно").Равно(Сущность.Строка);
	Ожидаем.Что(ЗначенияКолонок.Получить("Дата"), "ЗначенияКолонок.Дата получено корректно").Равно(Сущность.Дата);
	Ожидаем.Что(ЗначенияКолонок.Получить("Время"), "ЗначенияКолонок.Время получено корректно").Равно(Сущность.Время);
	Ожидаем.Что(ЗначенияКолонок.Получить("ДатаВремя"), "ЗначенияКолонок.ДатаВремя получено корректно").Равно(Сущность.ДатаВремя);
	Ожидаем.Что(ЗначенияКолонок.Получить("Ссылка"), "ЗначенияКолонок.Ссылка получено корректно").Равно(Сущность.Ссылка.Целое);
	Ожидаем.Что(ЗначенияКолонок.Получить("ДвоичныеДанные"), "ЗначенияКолонок.ДвоичныеДанные получено корректно").Равно(Сущность.ДвоичныеДанные);
КонецПроцедуры

&Тест
Процедура ПоискВСписке() Экспорт

	// Дано
	МодельДанных = Новый МодельДанных();
	ОбъектМодели = МодельДанных.СоздатьОбъектМодели(Тип("СущностьСоВсемиТипамиКолонок"));
	Коннектор.ИнициализироватьТаблицу(ОбъектМодели);

	Сущность = Новый СущностьСоВсемиТипамиКолонок;
	Сущность.Целое = 1;
	Коннектор.Сохранить(ОбъектМодели, Сущность);

	Сущность = Новый СущностьСоВсемиТипамиКолонок;
	Сущность.Целое = 2;
	Коннектор.Сохранить(ОбъектМодели, Сущность);

	Сущность = Новый СущностьСоВсемиТипамиКолонок;
	Сущность.Целое = 3;
	Коннектор.Сохранить(ОбъектМодели, Сущность);

	// Когда
	МассивПоиска = Новый Массив;
	МассивПоиска.Добавить(1);
	МассивПоиска.Добавить(3);
	
	ОпцииПоиска = Новый ОпцииПоиска();
	ОпцииПоиска.Отбор("Целое", ВидСравнения.В, МассивПоиска);

	НайденныеСтроки = Коннектор.НайтиСтрокиВТаблице(ОбъектМодели, ОпцииПоиска);

	// Тогда
	Ожидаем.Что(НайденныеСтроки, "Все строки получены").ИмеетДлину(2);
	Ожидаем.Что(НайденныеСтроки[0].Получить("Целое"), "Строки найдены").Равно(1);
	Ожидаем.Что(НайденныеСтроки[1].Получить("Целое"), "Строки найдены").Равно(3);

КонецПроцедуры

&Тест
Процедура ПоискНеВСписке() Экспорт

	// Дано
	МодельДанных = Новый МодельДанных();
	ОбъектМодели = МодельДанных.СоздатьОбъектМодели(Тип("СущностьСоВсемиТипамиКолонок"));
	Коннектор.ИнициализироватьТаблицу(ОбъектМодели);

	Сущность = Новый СущностьСоВсемиТипамиКолонок;
	Сущность.Целое = 1;
	Коннектор.Сохранить(ОбъектМодели, Сущность);

	Сущность = Новый СущностьСоВсемиТипамиКолонок;
	Сущность.Целое = 2;
	Коннектор.Сохранить(ОбъектМодели, Сущность);

	Сущность = Новый СущностьСоВсемиТипамиКолонок;
	Сущность.Целое = 3;
	Коннектор.Сохранить(ОбъектМодели, Сущность);

	Сущность = Новый СущностьСоВсемиТипамиКолонок;
	Сущность.Целое = 4;
	Коннектор.Сохранить(ОбъектМодели, Сущность);

	// Когда
	МассивПоиска = Новый Массив;
	МассивПоиска.Добавить(1);
	МассивПоиска.Добавить(3);
	
	ОпцииПоиска = Новый ОпцииПоиска();
	ОпцииПоиска.Отбор("Целое", ВидСравнения.НеВ, МассивПоиска);

	НайденныеСтроки = Коннектор.НайтиСтрокиВТаблице(ОбъектМодели, ОпцииПоиска);

	// Тогда
	Ожидаем.Что(НайденныеСтроки, "Все строки получены").ИмеетДлину(2);
	Ожидаем.Что(НайденныеСтроки[0].Получить("Целое"), "Строки найдены").Равно(2);
	Ожидаем.Что(НайденныеСтроки[1].Получить("Целое"), "Строки найдены").Равно(4);

КонецПроцедуры

&Тест
Процедура ПоискВПустомСписке() Экспорт

	// Дано
	МодельДанных = Новый МодельДанных();
	ОбъектМодели = МодельДанных.СоздатьОбъектМодели(Тип("СущностьСоВсемиТипамиКолонок"));
	Коннектор.ИнициализироватьТаблицу(ОбъектМодели);

	Сущность = Новый СущностьСоВсемиТипамиКолонок;
	Сущность.Целое = 1;
	Коннектор.Сохранить(ОбъектМодели, Сущность);

	Сущность = Новый СущностьСоВсемиТипамиКолонок;
	Сущность.Целое = 2;
	Коннектор.Сохранить(ОбъектМодели, Сущность);

	Сущность = Новый СущностьСоВсемиТипамиКолонок;
	Сущность.Целое = 3;
	Коннектор.Сохранить(ОбъектМодели, Сущность);

	// Когда
	МассивПоиска = Новый Массив;
	
	ОпцииПоиска = Новый ОпцииПоиска();
	ОпцииПоиска.Отбор("Целое", ВидСравнения.В, МассивПоиска);

	НайденныеСтроки = Коннектор.НайтиСтрокиВТаблице(ОбъектМодели, ОпцииПоиска);

	// Тогда
	Ожидаем.Что(НайденныеСтроки, "Строки не найдены").ИмеетДлину(0);

КонецПроцедуры

&Тест
Процедура ВыбратьПервые() Экспорт

	// Дано
	МодельДанных = Новый МодельДанных();
	ОбъектМодели = МодельДанных.СоздатьОбъектМодели(Тип("СущностьСоВсемиТипамиКолонок"));
	Коннектор.ИнициализироватьТаблицу(ОбъектМодели);
	
	ТестовыеУтилиты.СохранитьСущностьСоВсемиТипамиКолонок(Коннектор, ОбъектМодели, 1);
	ТестовыеУтилиты.СохранитьСущностьСоВсемиТипамиКолонок(Коннектор, ОбъектМодели, 2);
	ТестовыеУтилиты.СохранитьСущностьСоВсемиТипамиКолонок(Коннектор, ОбъектМодели, 3);

	// Когда
	ОпцииПоиска = Новый ОпцииПоиска;
	ОпцииПоиска.Первые(2);

	НайденныеСтроки = Коннектор.НайтиСтрокиВТаблице(ОбъектМодели, ОпцииПоиска);

	// Тогда
	Ожидаем.Что(НайденныеСтроки, "Все строки получены").ИмеетДлину(2);
	Ожидаем.Что(НайденныеСтроки[0].Получить("Целое"), "Первая строка").Равно(1);
	Ожидаем.Что(НайденныеСтроки[1].Получить("Целое"), "Вторая строка").Равно(2);

КонецПроцедуры

&Тест
Процедура ВыбратьПервыеСоСмещением() Экспорт

	// Дано
	МодельДанных = Новый МодельДанных();
	ОбъектМодели = МодельДанных.СоздатьОбъектМодели(Тип("СущностьСоВсемиТипамиКолонок"));
	Коннектор.ИнициализироватьТаблицу(ОбъектМодели);
	
	ТестовыеУтилиты.СохранитьСущностьСоВсемиТипамиКолонок(Коннектор, ОбъектМодели, 1);
	ТестовыеУтилиты.СохранитьСущностьСоВсемиТипамиКолонок(Коннектор, ОбъектМодели, 2);
	ТестовыеУтилиты.СохранитьСущностьСоВсемиТипамиКолонок(Коннектор, ОбъектМодели, 3);
	ТестовыеУтилиты.СохранитьСущностьСоВсемиТипамиКолонок(Коннектор, ОбъектМодели, 4);

	// Когда
	ОпцииПоиска = Новый ОпцииПоиска;
	ОпцииПоиска.Первые(2).Смещение(1);

	НайденныеСтроки = Коннектор.НайтиСтрокиВТаблице(ОбъектМодели, ОпцииПоиска);

	// Тогда
	Ожидаем.Что(НайденныеСтроки, "Все строки получены").ИмеетДлину(2);
	Ожидаем.Что(НайденныеСтроки[0].Получить("Целое"), "Первая строка").Равно(2);
	Ожидаем.Что(НайденныеСтроки[1].Получить("Целое"), "Вторая строка").Равно(3);

КонецПроцедуры

&Тест
Процедура УдалитьСтрокиВТаблице() Экспорт
	МодельДанных = Новый МодельДанных();
	ОбъектМодели = МодельДанных.СоздатьОбъектМодели(Тип("СущностьСоВсемиТипамиКолонок"));
	Коннектор.ИнициализироватьТаблицу(ОбъектМодели);
	
	Сущность = Новый СущностьСоВсемиТипамиКолонок;
	Сущность.Целое = 1;
	
	Коннектор.Сохранить(ОбъектМодели, Сущность);
	
	ОпцииПоиска = Новый ОпцииПоиска;
	ОпцииПоиска.Отбор("Целое", ВидСравнения.Равно, Сущность.Целое);

	Коннектор.УдалитьСтрокиВТаблице(ОбъектМодели, ОпцииПоиска);

	НайденныеСтроки = Коннектор.НайтиСтрокиВТаблице(ОбъектМодели, ОпцииПоиска);
	Ожидаем.Что(НайденныеСтроки, "Сущность удалилась").ИмеетДлину(0);
КонецПроцедуры

&Тест
Процедура УдалениеСущности() Экспорт
	МодельДанных = Новый МодельДанных();
	ОбъектМодели = МодельДанных.СоздатьОбъектМодели(Тип("СущностьСоВсемиТипамиКолонок"));
	Коннектор.ИнициализироватьТаблицу(ОбъектМодели);
	
	Сущность = Новый СущностьСоВсемиТипамиКолонок();
	Сущность.Целое = 1;
	Коннектор.Сохранить(ОбъектМодели, Сущность);
	
	Коннектор.Удалить(ОбъектМодели, Сущность);
	
	ОпцииПоиска = Новый ОпцииПоиска;
	ОпцииПоиска.Отбор("Целое", ВидСравнения.Равно, Сущность.Целое);
	НайденныеСтроки = Коннектор.НайтиСтрокиВТаблице(ОбъектМодели, ОпцииПоиска);
	
	Ожидаем.Что(НайденныеСтроки, "Сущность удалилась").ИмеетДлину(0);
	
КонецПроцедуры

&Тест
Процедура Автоинкремент() Экспорт
	МодельДанных = Новый МодельДанных();
	ОбъектМодели = МодельДанных.СоздатьОбъектМодели(Тип("АвтоинкрементныйКлючБезКолонок"));
	Коннектор.ИнициализироватьТаблицу(ОбъектМодели);
	
	Сущность = Новый АвтоинкрементныйКлючБезКолонок();
	Коннектор.Сохранить(ОбъектМодели, Сущность);
	
	Ожидаем.Что(Сущность.Идентификатор).Равно(1);

	Сущность = Новый АвтоинкрементныйКлючБезКолонок();
	Коннектор.Сохранить(ОбъектМодели, Сущность);
	
	Ожидаем.Что(Сущность.Идентификатор).Равно(2);

КонецПроцедуры

&Тест
Процедура СущностьМожетЗаписатьСебя() Экспорт
	// Дано
	ПодключитьСценарий("tests/fixtures/ПростойОбъект.os", "ПростойОбъект");

    ТипКоннектора = "КоннекторInMemory";
	МенеджерСущностей = Новый МенеджерСущностей(Тип(ТипКоннектора));
	МенеджерСущностей.ДобавитьКлассВМодель(Тип("ПростойОбъект"));
	МенеджерСущностей.Инициализировать();

	// Когда 
	ПростойОбъект = МенеджерСущностей.СоздатьЭлемент(Тип("ПростойОбъект"));
	ПростойОбъект.Идентификатор = "1";
	ПростойОбъект.Поле = "2";
	ПростойОбъект.Сохранить();

	// Тогда
	НайденныйПростойОбъект = МенеджерСущностей.ПолучитьОдно(Тип("ПростойОбъект"), "1");

	Ожидаем.Что(НайденныйПростойОбъект).Не_().Равно(Неопределено);
	Ожидаем.Что(НайденныйПростойОбъект.Идентификатор).Равно("1");
	Ожидаем.Что(НайденныйПростойОбъект.Поле).Равно("2");

КонецПроцедуры

&Тест
Процедура СущностьМожетПерезаписатьСебя() Экспорт
	// Дано
	ПодключитьСценарий("tests/fixtures/ПростойОбъект.os", "ПростойОбъект");
    ТипКоннектора = "КоннекторInMemory";
	МенеджерСущностей = Новый МенеджерСущностей(Тип(ТипКоннектора));
	МенеджерСущностей.ДобавитьКлассВМодель(Тип("ПростойОбъект"));
	МенеджерСущностей.Инициализировать();

	// Когда 
	ПростойОбъект = МенеджерСущностей.СоздатьЭлемент(Тип("ПростойОбъект"));
	ПростойОбъект.Идентификатор = "1";
	ПростойОбъект.Поле = "2";
	ПростойОбъект.Сохранить();
	НайденныйПростойОбъект = МенеджерСущностей.ПолучитьОдно(Тип("ПростойОбъект"), "1");
	НайденныйПростойОбъект.Поле = "3";
	НайденныйПростойОбъект.Сохранить();

	// Тогда
	НайденныйПростойОбъект = МенеджерСущностей.ПолучитьОдно(Тип("ПростойОбъект"), "1");

	Ожидаем.Что(НайденныйПростойОбъект).Не_().Равно(Неопределено);
	Ожидаем.Что(НайденныйПростойОбъект.Идентификатор).Равно("1");
	Ожидаем.Что(НайденныйПростойОбъект.Поле).Равно("3");

КонецПроцедуры

&Тест
Процедура МенеджерСущностейМожетЗаписать() Экспорт
	// Дано
	ПодключитьСценарий("tests/fixtures/ПростойОбъект.os", "ПростойОбъект");
    ТипКоннектора = "КоннекторInMemory";
	МенеджерСущностей = Новый МенеджерСущностей(Тип(ТипКоннектора));
	МенеджерСущностей.ДобавитьКлассВМодель(Тип("ПростойОбъект"));
	МенеджерСущностей.Инициализировать();

	// Когда 
	ПростойОбъект = МенеджерСущностей.СоздатьЭлемент(Тип("ПростойОбъект"));
	ПростойОбъект.Идентификатор = "1";
	ПростойОбъект.Поле = "2";
	МенеджерСущностей.Сохранить(ПростойОбъект);

	// Тогда
	НайденныйПростойОбъект = МенеджерСущностей.ПолучитьОдно(Тип("ПростойОбъект"), "1");

	Ожидаем.Что(НайденныйПростойОбъект).Не_().Равно(Неопределено);
	Ожидаем.Что(НайденныйПростойОбъект.Идентификатор).Равно("1");
	Ожидаем.Что(НайденныйПростойОбъект.Поле).Равно("2");

КонецПроцедуры

&Тест
Процедура ХранилищеСущностейМожетЗаписать() Экспорт

	// Дано
	ПодключитьСценарий("tests/fixtures/ПростойОбъект.os", "ПростойОбъект");
    ТипКоннектора = "КоннекторInMemory";
	МенеджерСущностей = Новый МенеджерСущностей(Тип(ТипКоннектора));
	МенеджерСущностей.ДобавитьКлассВМодель(Тип("ПростойОбъект"));
	МенеджерСущностей.Инициализировать();

	// Когда 

	ХранилищеПростойОбъект = МенеджерСущностей.ПолучитьХранилищеСущностей(Тип("ПростойОбъект"));

	ПростойОбъект = ХранилищеПростойОбъект.СоздатьЭлемент();
	ПростойОбъект.Идентификатор = "1";
	ПростойОбъект.Поле = "2";
	ПростойОбъект.Сохранить();

	// Тогда
	НайденныйПростойОбъект = ХранилищеПростойОбъект.ПолучитьОдно("1");

	Ожидаем.Что(НайденныйПростойОбъект).Не_().Равно(Неопределено);
	Ожидаем.Что(НайденныйПростойОбъект.Идентификатор).Равно("1");
	Ожидаем.Что(НайденныйПростойОбъект.Поле).Равно("2");

КонецПроцедуры

&Тест
Процедура РаботаСИменованнымПолем() Экспорт
	// Дано
	МенеджерСущностей = Новый МенеджерСущностей(Тип("КоннекторInMemory"));
	МенеджерСущностей.ДобавитьКлассВМодель(Тип("СущностьСИменованнымПолем"));
	МенеджерСущностей.Инициализировать();

	// Когда 
	СущностьСИменованнымПолем = МенеджерСущностей.СоздатьЭлемент(Тип("СущностьСИменованнымПолем"));
	СущностьСИменованнымПолем.Имя = "1";
	СущностьСИменованнымПолем.ВтороеИмя = "а";
	МенеджерСущностей.Сохранить(СущностьСИменованнымПолем);

	// Тогда
	ОпцииПоиска = Новый ОпцииПоиска;
	ОпцииПоиска.Отбор("ВтороеИмя", ВидСравнения.Равно, "а");

	Результат = МенеджерСущностей.Получить(Тип("СущностьСИменованнымПолем"), ОпцииПоиска);

	Ожидаем.Что(Результат[0].Имя).Равно("1");
	
КонецПроцедуры

&Тест
Процедура СортировкаПоДвумКолонкам() Экспорт

	// Дано
	МодельДанных = Новый МодельДанных();
	ОбъектМодели = МодельДанных.СоздатьОбъектМодели(Тип("СущностьСоВсемиТипамиКолонок"));
	Коннектор.ИнициализироватьТаблицу(ОбъектМодели);

	Сущность1 = Новый СущностьСоВсемиТипамиКолонок;
	Сущность1.Целое = 1;
	Сущность1.ДатаВремя = Дата(2018, 1, 1, 0, 0, 0);
	Коннектор.Сохранить(ОбъектМодели, Сущность1);

	Сущность2 = Новый СущностьСоВсемиТипамиКолонок;
	Сущность2.Целое = 2;
	Сущность2.ДатаВремя = Дата(2018, 1, 1, 0, 0, 0);
	Коннектор.Сохранить(ОбъектМодели, Сущность2);

	Сущность3 = Новый СущностьСоВсемиТипамиКолонок;
	Сущность3.Целое = 3;
	Сущность3.ДатаВремя = Дата(2019, 1, 1, 0, 0, 0);
	Коннектор.Сохранить(ОбъектМодели, Сущность3);

	// Когда
	ОпцииПоиска = Новый ОпцииПоиска;
	ОпцииПоиска
		.СортироватьПо("ДатаВремя", НаправлениеСортировки.Возр)
		.СортироватьПо("Целое", НаправлениеСортировки.Убыв);

	НайденныеСтроки = Коннектор.НайтиСтрокиВТаблице(ОбъектМодели, ОпцииПоиска);

	// Тогда
	Ожидаем.Что(НайденныеСтроки, "Все строки получены").ИмеетДлину(3);
	Ожидаем.Что(НайденныеСтроки[0].Получить("Целое"), "Строки отсортированы по полю").Равно(2);
	Ожидаем.Что(НайденныеСтроки[1].Получить("Целое"), "Строки отсортированы по полю").Равно(1);
	Ожидаем.Что(НайденныеСтроки[2].Получить("Целое"), "Строки отсортированы по полю").Равно(3);

КонецПроцедуры
