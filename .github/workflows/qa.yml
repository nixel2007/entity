name: QA

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0

    - name: Setup Onescript Action
      uses: otymko/setup-onescript@v1.4
      with:
        version: "1.8.3"

    - name: Install dependencies
      run: |
        opm install opm@1.0.2
        opm install -l
        opm install -l 1commands 1testrunner coverage@0.6.1

    - name: Install docker
      uses: docker/setup-docker-action@v4
      timeout-minutes: 12

    - name: Setup PostgreSQL
      run: |
        docker run --rm --name postgres -d -p 5432:5432 -e POSTGRES_PASSWORD=postgres -e POSTGRES_USERNAME=postgres -e POSTGRES_DB=postgres -e POSTGRES_HOST_AUTH_METHOD=password --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5 postgres
        docker ps
        while [ "`docker inspect -f {{.State.Health.Status}} postgres`" != "healthy" ]; do docker ps && sleep 2; done
        docker ps
        
    - name: Compute branch name
      uses: nelonoel/branch-name@v1.0.1
    
    - name: Извлечение версии пакета
      shell: bash
      run: echo "##[set-output name=version;]`cat packagedef | grep ".Версия(" | sed 's|[^"]*"||' | sed -r 's/".+//'`"
      id: extract_version

    - name: Run coverage tests
      env:
        TESTRUNNER_RUN_POSTGRES_TESTS: true
        TESTRUNNER_RUN_SQLITE_TESTS: false
      run: |
        oscript ./tasks/coverage.os

    - name: Setup sonarqube
      uses: warchant/setup-sonar-scanner@v8

      # Анализ проекта в SonarQube (ветка)
    - name: Анализ в SonarQube (branch)
      if: github.event_name == 'push'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: sonar-scanner
        -Dsonar.host.url=https://sonar.openbsl.ru
        -Dsonar.branch.name=${{ env.BRANCH_NAME }}
        -Dsonar.projectVersion=${{ steps.extract_version.outputs.version }}

      # Анализ проекта в SonarQube (PR)
      # https://docs.sonarqube.org/latest/analysis/pull-request/
    - name: Анализ в SonarQube (pull-request)
      if: github.event_name == 'pull_request'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: sonar-scanner
        -Dsonar.host.url=https://sonar.openbsl.ru
        -Dsonar.pullrequest.key=${{ github.event.pull_request.number }}
        -Dsonar.pullrequest.branch=${{ github.event.pull_request.head.ref }}
        -Dsonar.pullrequest.base=${{ github.event.pull_request.base.ref }}
        -Dsonar.scm.revision=${{ github.event.pull_request.head.sha }}
